{
  "name": "V.eslint.cn",
  "tagline": "eslint 相关",
  "body": "## 常见问题\r\n\r\n```js\r\nfunction foo(a, b, a) {\r\n    console.log(\"which a is it?\", a);\r\n}\r\n```\r\n\r\n```js\r\nvar foo = {\r\n    bar: \"baz\",\r\n    bar: \"qux\"\r\n};\r\n```\r\n\r\n```\r\nvar foo = {\r\n    bar: \"baz\",\r\n    qux: \"quux\",\r\n};\r\n```\r\n\r\n```\r\nif(!a in b) {\r\n    // do something\r\n}\r\n```\r\n\r\n```\r\ntypeof foo === \"strnig\"\r\ntypeof foo == \"undefimed\"\r\ntypeof bar != \"nunber\"\r\ntypeof bar !== \"fucntion\"\r\n```\r\n\r\n```\r\nvar object1 = {\r\n    \"foo\": \"bar\",\r\n    \"baz\": 42,\r\n    \"qux-a\": true\r\n};\r\n```\r\n\r\n```\r\nvar object2 = {\r\n    'foo': \"bar\",\r\n    'baz': 42,\r\n    'qux-a': true\r\n};\r\n```\r\n\r\n```\r\nvar object3 = {\r\n    foo: \"bar\",\r\n    baz: 42,\r\n    \"qux-a\": true\r\n};\r\n```\r\n\r\n\r\n```\r\nif (foo) {\r\n  bar();\r\n}\r\nelse {\r\n  baz();\r\n}\r\n```\r\n\r\n```\r\nif (foo) {\r\n  bar();\r\n} else {\r\n  baz();\r\n}\r\n```\r\n\r\n```\r\nif (foo) \r\n{\r\n  bar();\r\n} \r\nelse \r\n{\r\n  baz();\r\n}\r\n\r\n```\r\n\r\n\r\n```\r\nvar obj = {\r\n    a: value,\r\n    bcde:  42,\r\n    fg :   foo()\r\n};\r\n```\r\n\r\n```\r\nvar obj = {\r\n    a   : value,\r\n    bcde: 42,\r\n    fg  : foo()\r\n};\r\n```\r\n\r\n```\r\nvar obj = {\r\n    a    :value,\r\n    bcde :42,\r\n    fg   :foo()\r\n};\r\n```\r\n\r\n```\r\nvar obj = {\r\n    a    : value,\r\n    bcde : 42,\r\n    fg   : foo()\r\n};\r\n```\r\n\r\n\r\n```\r\nvar foo = 5;\r\nvar bar = 3;\r\n\r\n```\r\n\r\n```\r\nvar foo = 5;\r\n\r\n\r\nvar bar = 3;\r\n\r\n```\r\n\r\n```\r\nvar foo = 5;\r\n\r\n\r\n\r\n\r\n\r\nvar bar = 3;\r\n\r\n```\r\n\r\n\r\n```\r\nfunction foo() {\r\n    var bar;\r\n    var baz;\r\n    let qux;\r\n    let norf;\r\n}\r\n```\r\n\r\n```\r\nfunction foo() {\r\n    var bar,\r\n        baz;\r\n    let qux,\r\n        norf;\r\n}\r\n```\r\n\r\n\r\n```\r\nfunction withoutSpace(x) {\r\n    // ...\r\n}\r\n\r\nfunction withSpace (x) {\r\n    // ...\r\n}\r\n```\r\n\r\n```\r\nfoo --;\r\n\r\nfoo--;\r\n```\r\n\r\n\r\n# js代码检测\r\n\r\n* 保持风格一致\r\n* 提高可读性\r\n* 减少潜在的错误\r\n* 最佳实践\r\n\r\n\r\n# ESLint\r\n\r\n![Nicholas](http://v.eslint.cn/img/nzakas.png)\r\n### [Nicholas C. Zakas](https://github.com/nzakas)\r\n\r\n\r\n# 今天聊一聊\r\n\r\n* eslint 是什么\r\n* eslint 安装&配置\r\n* eslint 集成\r\n* eslint 规则&插件\r\n* eslint 中文\r\n* eslint 架构\r\n* eslint 自动修复\r\n* eslint 存在的问题\r\n* 为什么选择 eslint\r\n* eslint 未来\r\n\r\n## ESLint 是什么\r\n\r\nThe pluggable linting utility for JavaScript and JSX\r\n\r\n在这里你只需知道 ESLint 可以进行代码检测即可。稍后再看pluggable\r\n## 安装和配置\r\n\r\n```bash\r\n$ node install -g eslint\r\n\r\n```\r\n\r\n创建配置文件 **.eslintrc.***\r\n\r\n```bash\r\n$ eslint --init\r\n\r\n```\r\n\r\n\r\n```js\r\n{\r\n    \"env\": {\r\n        \"browser\": true,\r\n        \"node\": true\r\n    },\r\n    \"globals\": {\r\n        \"VUE\": true,\r\n        \"__inline\": false\r\n    },\r\n    \"parserOptions\": {\r\n        \"ecmaFeatures\": {\r\n            \"jsx\": true\r\n        }\r\n    },\r\n    \"plugins\": [\r\n        \"plugin1\",\r\n        \"eslint-plugin-plugin2\"\r\n    ],\r\n    \"rules\": {\r\n        \"strict\": \"off\",\r\n        \"no-loop-func\": \"warn\",\r\n        \"semi\": \"error\"\r\n    }\r\n}\r\n```\r\n\r\n**注意:** \"error\"错误，\"warn\"警告，\"off\"关闭\r\n\r\n\r\n## .eslintrc.* 优先级\r\n\r\n1. **.eslintrc.js**\r\n2. **.eslintrc.yaml**\r\n3. **.eslintrc.yml**\r\n4. **.eslintrc.json**\r\n5. **~~.eslintrc~~**\r\n6. **package.json**\r\n\r\n## [eslint config for sm](https://github.com/smocean/eslint-config-sm)\r\n\r\n```bash\r\n$ node install -g eslint-config-sm \r\n```\r\n\r\n配置文件 **.eslintrc.***\r\n\r\n```json\r\n{\r\n   \"extends\": \"sm\"\r\n}\r\n```\r\n\r\nnode环境：\r\n```json\r\n{\r\n    \"extends\": \"sm/node-config\"\r\n}\r\n```\r\n\r\n\r\n那么现在再回顾一下 ESLint 描述中的 pluggable，有没有真正体会到！\r\n\r\n## 配置层叠和继承\r\n\r\n```js\r\napp\r\n├── .eslintrc\r\n├── lib\r\n│ └── source.js\r\n└─┬ tests\r\n  ├── .eslintrc\r\n  └── test.js\r\n```\r\n\r\n\r\n# [集成](http://eslint.cn/docs/user-guide/integrations)\r\n\r\n* [cmd](http://eslint.cn/docs/user-guide/integrations#command-line-tools)\r\n* [Sublime Text 3](https://github.com/roadhump/SublimeLinter-eslint)\r\n* [Vim](https://github.com/scrooloose/syntastic/tree/master/syntax_checkers/javascript)\r\n* IntelliJ IDEA, WebStorm\r\n* Visual Studio Code\r\n* ...\r\n\r\n\r\n## cmd: [eslint-nibble](https://github.com/IanVS/eslint-nibble)\r\n\r\n![http://v.eslint.cn/img/eslint-cmd.png](http://v.eslint.cn/img/eslint-cmd.png)\r\n![http://v.eslint.cn/img/eslint-nibble.png](http://v.eslint.cn/img/eslint-nibble.png)\r\n\r\n## [Sublime Text 3](https://github.com/smocean/eslint-config-sm)\r\n\r\n\r\n![http://v.eslint.cn/img/sublime.png](http://v.eslint.cn/img/sublime.png)\r\n\r\n## ESLint中文\r\n\r\n* [http://eslint.cn](http://eslint.cn)\r\n* [http://cn.eslint.org](http://cn.eslint.org)\r\n* [http://weibo.com/eslint](http://weibo.com/eslint)\r\n* <span class=\"green\">QQ: 523034328</span>\r\n\r\n\r\n### 贡献者\r\n\r\n* [@coocon](https://github.com/coocon)\r\n* [@cssmagic](https://github.com/cssmagic)\r\n* [@DavidDong93](https://github.com/DavidDong93)\r\n* [@fengnana](https://github.com/fengnana)\r\n* [@freeyiyi1993](https://github.com/freeyiyi1993)\r\n* [@ILFront-End](https://github.com/ILFront-End)\r\n* [@hacke2](https://github.com/hacke2)\r\n* [@maomaoking](https://github.com/maomaoking)\r\n* [@maoshuyu](https://github.com/maoshuyu)\r\n* [@molee1905](http://github.com/molee1905)\r\n* [@qifeigit](https://github.com/qifeigit)\r\n* [@summart](https://github.com/summart)\r\n* [@sunshiner](https://github.com/sunshiner)\r\n* [@wqllpw](https://github.com/wqllpw)\r\n* [@xkf521](https://github.com/xkf521)\r\n* [@yanggao40](https://github.com/yanggao40)\r\n* [@ybbjegj](https://github.com/ybbjegj)\r\n\r\n\r\n# 高阶\r\n\r\n\r\n## 架构\r\n\r\n\r\n![http://v.eslint.cn/img/architecture.png](http://v.eslint.cn/img/architecture.png)\r\n\r\n\r\n## 自动修复\r\n\r\n![http://v.eslint.cn/img/message.png](http://v.eslint.cn/img/message.png)\r\n![http://v.eslint.cn/img/fix.png](http://v.eslint.cn/img/fix.png)\r\n\r\n\r\n### 可修复的规则\r\n\r\n\r\n* [no-extra-semi](http://eslint.cn/docs/rules/no-extra-semi)\r\n* [no-multi-spaces](http://eslint.cn/docs/rules/no-multi-spaces)\r\n* [array-bracket-spacing](http://eslint.cn/docs/rules/array-bracket-spacing)\r\n* [block-spacing](http://eslint.cn/docs/rules/block-spacing)\r\n* [comma-spacing](http://eslint.cn/docs/rules/comma-spacing)\r\n* [computed-property-spacing](http://eslint.cn/docs/rules/computed-property-spacing)\r\n* [eol-last](http://eslint.cn/docs/rules/eol-last)\r\n* [jsx-quotes](http://eslint.cn/docs/rules/jsx-quotes)\r\n* [indent](http://eslint.cn/docs/rules/indent)\r\n* [keyword-spacing](http://eslint.cn/docs/rules/keyword-spacing)\r\n* [linebreak-style](http://eslint.cn/docs/rules/linebreak-style)\r\n* [no-spaced-func](http://eslint.cn/docs/rules/no-spaced-func)\r\n* [no-trailing-spaces](http://eslint.cn/docs/rules/no-trailing-spaces)\r\n* [object-curly-spacing](http://eslint.cn/docs/rules/object-curly-spacing)\r\n* [quotes](http://eslint.cn/docs/rules/quotes)\r\n* [semi](http://eslint.cn/docs/rules/semi)\r\n* [space-before-blocks](http://eslint.cn/docs/rules/space-before-blocks)\r\n* [space-before-function-paren](http://eslint.cn/docs/rules/space-before-function-paren)\r\n* [space-in-parens](http://eslint.cn/docs/rules/space-in-parens)\r\n* [space-infix-ops](http://eslint.cn/docs/rules/space-infix-ops)\r\n* [space-unary-ops](http://eslint.cn/docs/rules/space-unary-ops)\r\n* [spaced-comment](http://eslint.cn/docs/rules/spaced-comment)\r\n* [constructor-super](http://eslint.cn/docs/rules/constructor-super)\r\n* [template-curly-spacing](http://eslint.cn/docs/rules/template-curly-spacing)\r\n* [yield-star-spacing](http://eslint.cn/docs/rules/yield-star-spacing)\r\n\r\n\r\n## 规则 & 插件\r\n \r\n```bash\r\n$ npm install -g yo\r\n\r\n$ npm i -g generator-eslint\r\n\r\n```\r\n\r\n创建插件:\r\n```bash\r\n$ yo eslint:plugin\r\n\r\n```\r\n\r\n创建规则:\r\n```bash\r\n$ yo eslint:rule\r\n\r\n```\r\n\r\n**练练手呗**\r\n\r\n## AST\r\n\r\n* [estree](https://github.com/estree/estree/blob/master/spec.md)\r\n* [esprima](https://github.com/jquery/esprima/blob/master/src/syntax.ts)\r\n* [acorn](https://github.com/ternjs/acorn)\r\n* [expree](https://github.com/eslint/espree)\r\n\r\n## 自动修复存在的问题\r\n\r\n我们来看一下自动修复的源码：\r\n\r\n```js\r\n// sort in reverse order of occurrence\r\nfixes.sort(function(a, b) {\r\n    if (a.fix.range[1] <= b.fix.range[0]) {\r\n        return 1;\r\n    } else {\r\n        return -1;\r\n    }\r\n});\r\n\r\n// split into array of characters for easier manipulation\r\nvar chars = text.split(\"\");\r\n\r\nfixes.forEach(function(problem) {\r\n    var fix = problem.fix;\r\n\r\n    if (fix.range[1] < lastFixPos) {\r\n        chars.splice(fix.range[0], fix.range[1] - fix.range[0], fix.text);\r\n        lastFixPos = fix.range[0];\r\n    } else {\r\n        remainingMessages.push(problem);\r\n    }\r\n});\r\n```\r\n\r\n```js\r\nvar fixes = [\r\n    {range: [10, 10]},\r\n    {range: [11, 15]},\r\n    {range: [11, 16]}\r\n];\r\n```\r\n降序排列：\r\n```js\r\nvar fixes = [\r\n    {range: [11, 15]},\r\n    {range: [11, 16]},\r\n    {range: [10, 10]}\r\n];\r\n```\r\n\r\n1. 不能保证所有的修复都被应用到。\r\n2. 可能与其它规则冲突。例如，一个规则能插入逗号，然而另一个规则要求逗号后面有空格。要求有空格的规则并不知道一个新的逗号被加了进来，因为在规则执行后它就结束了。\r\n3. 可能改变作用的评估。例如，将函数或语句块内的 var 改为 const。可能导致整个规则无效，因为在遍历前，作用域的计算已经结束。\r\n4. 一个修复如果改变了代码的含义，很有可能导致程序出错。\r\n\r\n作者自我反思整个项目的设计决策：\r\n\r\n1. 自动修复模式应该只进行修复，无需关心不可修复的规则。但是现在，它既扮演者 lint 的角色，也会输出消息。这似乎是不必要的。\r\n2. 目前的修复是基于文本的修复，对于自动修复太过天真。很明显，基于文本的修复可伸缩性很差。\r\n3. 试图将自动修复融入到单一遍历系统的检测过程中，显得力不从心。\r\n\r\n## ESLint 3.0\r\n\r\n目前可查看multipass分支\r\n\r\n![http://v.eslint.cn/img/fix-more-gt-slower.png](http://v.eslint.cn/img/fix-more-gt-slower.png)\r\n\r\n\r\n## 为什么选择 eslint\r\n\r\n* 慕[名](https://github.com/nzakas)而来\r\n* 规则数量丰富 (200+)\r\n* 自由定制\r\n* 支持扩展\r\n* 4月14号 [jscs](https://github.com/jscs-dev/node-jscs)[加入](http://eslint.org/blog/2016/04/welcoming-jscs-to-eslint) eslint\r\n\r\n![http://v.eslint.cn/img/do-u-use-eslint.png](http://v.eslint.cn/img/do-u-use-eslint.png)\r\n\r\n## eslint 未来\r\n\r\n[ESLint 加入了 jQuery 基金会](http://eslint.org/blog/2016/04/eslint-joins-the-jquery-foundation)\r\n\r\n在文中，作者说到：一个开源项目达到一定的普及程度之后，维护者就有责任确保它有持续良好的社区，以生存发展下去。在过去几年，一些很重要的项目都出现了问题：YUI不再进行维护，Node.js分裂，Express也变得杂乱无序。社区变得混乱不堪，无所附依。于是就加入了jQuery 基金会，避免 ESLint 重蹈覆辙。jQuery 基金会 门下有很多伟大的项目，比如 jQuery 和 Esprima，在和 Dojo 基金会合并之后，也囊括了Lodash 和 Grunt 等。作者谦虚地说道，能与这些重要而且有影响力的项目为伍，感到自豪。\r\n\r\n那么加入jQuery 基金会，可以确保以下几个事情：\r\n\r\n1. 项目不会因为作者本人离开而停止。虽然作者并没计划离开，但，纵观历史，开源项目的创始人最终离开自己的项目甚是常见。从John Resig 离开 jQuery 到 Ryan Dahl 离开 Node.js，作者无法想象自己也会走他们走过的路。\r\n2. ESLint 将永远不会卖给某个公司。从  Node.js 和 Express 事件看来，这种关系并不总是一帆风顺。ESLint 社区应该得到承诺，依赖 ESLint 是安全的，是没有问题的。\r\n3. ESLint 项目将继续跟进与开源有关的最新的最佳实践和合法建议。\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}